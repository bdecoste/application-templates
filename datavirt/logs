+ inject_brokers
+ IFS=,
+ read -a brokers
+ AMQ=false
+ '[' 0 -eq 0 ']'
+ ras=
+ sed -i 's|<!-- ##MESSAGING_RESOURCE_ADAPTERS## -->||' /opt/eap/standalone/configuration/standalone-openshift.xml
+ configure_hornetq
+ '[' true '!=' false ']'
+ configure_hornetq_cluster_password
+ '[' -n OYHdMQDI ']'
+ JBOSS_MESSAGING_ARGS=' -Djboss.messaging.cluster.password=OYHdMQDI'
++ configure_hornetq_destinations
++ IFS=,
++ read -a queues
++ IFS=,
++ read -a topics
++ destinations=
++ '[' 0 -ne 0 -o 0 -ne 0 ']'
++ echo ''
+ destinations=
++ sed -e 's|##DESTINATIONS##||'
++ sed ':a;N;$!ba;s|\n|\\n|g'
+ hornetq_subsystem='        <subsystem xmlns="urn:jboss:domain:messaging:1.4">\n            <hornetq-server>\n                <cluster-password>${jboss.messaging.cluster.password:CHANGE ME!!}</cluster-password>\n                <persistence-enabled>true</persistence-enabled>\n                <journal-type>NIO</journal-type>\n                <journal-min-files>2</journal-min-files>\n                <connectors>\n                    <netty-connector name="netty" socket-binding="messaging"/>\n                    <netty-connector name="netty-throughput" socket-binding="messaging-throughput">\n                        <param key="batch-delay" value="50"/>\n                    </netty-connector>\n                    <in-vm-connector name="in-vm" server-id="0"/>\n                </connectors>\n                <acceptors>\n                    <netty-acceptor name="netty" socket-binding="messaging"/>\n                    <netty-acceptor name="netty-throughput" socket-binding="messaging-throughput">\n                        <param key="batch-delay" value="50"/>\n                        <param key="direct-deliver" value="false"/>\n                    </netty-acceptor>\n                    <in-vm-acceptor name="in-vm" server-id="0"/>\n                </acceptors>\n                <broadcast-groups>\n                    <broadcast-group name="bg-group1">\n                        <jgroups-stack>tcp</jgroups-stack>\n                        <jgroups-channel>hornetq-channel</jgroups-channel>\n                        <broadcast-period>5000</broadcast-period>\n                        <connector-ref>netty</connector-ref>\n                    </broadcast-group>\n                </broadcast-groups>\n                <discovery-groups>\n                    <discovery-group name="dg-group1">\n                        <jgroups-stack>tcp</jgroups-stack>\n                        <jgroups-channel>hornetq-channel</jgroups-channel>\n                        <refresh-timeout>10000</refresh-timeout>\n                    </discovery-group>\n                </discovery-groups>\n                <cluster-connections>\n                    <cluster-connection name="my-cluster">\n                        <address>jms</address>\n                        <connector-ref>netty</connector-ref>\n                        <discovery-group-ref discovery-group-name="dg-group1"/>\n                    </cluster-connection>\n                </cluster-connections>\n                <security-settings>\n                    <security-setting match="#">\n                        <permission type="send" roles="guest"/>\n                        <permission type="consume" roles="guest"/>\n                        <permission type="createNonDurableQueue" roles="guest"/>\n                        <permission type="deleteNonDurableQueue" roles="guest"/>\n                    </security-setting>\n                </security-settings>\n                <address-settings>\n                    <!--default for catch all-->\n                    <address-setting match="#">\n                        <dead-letter-address>jms.queue.DLQ</dead-letter-address>\n                        <expiry-address>jms.queue.ExpiryQueue</expiry-address>\n                        <redelivery-delay>0</redelivery-delay>\n                        <redistribution-delay>1000</redistribution-delay>\n                        <max-size-bytes>10485760</max-size-bytes>\n                        <address-full-policy>PAGE</address-full-policy>\n                        <page-size-bytes>2097152</page-size-bytes>\n                        <message-counter-history-day-limit>10</message-counter-history-day-limit>\n                    </address-setting>\n                </address-settings>\n                <jms-connection-factories>\n                    <connection-factory name="InVmConnectionFactory">\n                        <connectors>\n                            <connector-ref connector-name="in-vm"/>\n                        </connectors>\n                        <entries>\n                            <entry name="java:/ConnectionFactory"/>\n                        </entries>\n                    </connection-factory>\n                    <connection-factory name="RemoteConnectionFactory">\n                        <connectors>\n                            <connector-ref connector-name="netty"/>\n                        </connectors>\n                        <entries>\n                            <entry name="java:jboss/exported/jms/RemoteConnectionFactory"/>\n                        </entries>\n                        <ha>true</ha>\n                        <block-on-acknowledge>true</block-on-acknowledge>\n                        <retry-interval>1000</retry-interval>\n                        <retry-interval-multiplier>1.0</retry-interval-multiplier>\n                        <reconnect-attempts>-1</reconnect-attempts>\n                    </connection-factory>\n                    <pooled-connection-factory name="hornetq-ra">\n                        <transaction mode="xa"/>\n                        <connectors>\n                            <connector-ref connector-name="in-vm"/>\n                        </connectors>\n                        <entries>\n                            <entry name="java:/JmsXA"/>\n                        </entries>\n                    </pooled-connection-factory>\n                </jms-connection-factories>\n                <jms-destinations>\n                    <jms-queue name="ExpiryQueue">\n                        <entry name="java:/jms/queue/ExpiryQueue"/>\n                    </jms-queue>\n                    <jms-queue name="DLQ">\n                        <entry name="java:/jms/queue/DLQ"/>\n                    </jms-queue>\n                    \n                </jms-destinations>\n            </hornetq-server>\n        </subsystem>'
+ sed -i 's|<!-- ##MESSAGING_EXTENSION## -->|<extension module="org.jboss.as.messaging"/>|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ sed -i 's|<!-- ##MESSAGING_SUBSYSTEM## -->|        <subsystem xmlns="urn:jboss:domain:messaging:1.4">\n            <hornetq-server>\n                <cluster-password>${jboss.messaging.cluster.password:CHANGE ME!!}</cluster-password>\n                <persistence-enabled>true</persistence-enabled>\n                <journal-type>NIO</journal-type>\n                <journal-min-files>2</journal-min-files>\n                <connectors>\n                    <netty-connector name="netty" socket-binding="messaging"/>\n                    <netty-connector name="netty-throughput" socket-binding="messaging-throughput">\n                        <param key="batch-delay" value="50"/>\n                    </netty-connector>\n                    <in-vm-connector name="in-vm" server-id="0"/>\n                </connectors>\n                <acceptors>\n                    <netty-acceptor name="netty" socket-binding="messaging"/>\n                    <netty-acceptor name="netty-throughput" socket-binding="messaging-throughput">\n                        <param key="batch-delay" value="50"/>\n                        <param key="direct-deliver" value="false"/>\n                    </netty-acceptor>\n                    <in-vm-acceptor name="in-vm" server-id="0"/>\n                </acceptors>\n                <broadcast-groups>\n                    <broadcast-group name="bg-group1">\n                        <jgroups-stack>tcp</jgroups-stack>\n                        <jgroups-channel>hornetq-channel</jgroups-channel>\n                        <broadcast-period>5000</broadcast-period>\n                        <connector-ref>netty</connector-ref>\n                    </broadcast-group>\n                </broadcast-groups>\n                <discovery-groups>\n                    <discovery-group name="dg-group1">\n                        <jgroups-stack>tcp</jgroups-stack>\n                        <jgroups-channel>hornetq-channel</jgroups-channel>\n                        <refresh-timeout>10000</refresh-timeout>\n                    </discovery-group>\n                </discovery-groups>\n                <cluster-connections>\n                    <cluster-connection name="my-cluster">\n                        <address>jms</address>\n                        <connector-ref>netty</connector-ref>\n                        <discovery-group-ref discovery-group-name="dg-group1"/>\n                    </cluster-connection>\n                </cluster-connections>\n                <security-settings>\n                    <security-setting match="#">\n                        <permission type="send" roles="guest"/>\n                        <permission type="consume" roles="guest"/>\n                        <permission type="createNonDurableQueue" roles="guest"/>\n                        <permission type="deleteNonDurableQueue" roles="guest"/>\n                    </security-setting>\n                </security-settings>\n                <address-settings>\n                    <!--default for catch all-->\n                    <address-setting match="#">\n                        <dead-letter-address>jms.queue.DLQ</dead-letter-address>\n                        <expiry-address>jms.queue.ExpiryQueue</expiry-address>\n                        <redelivery-delay>0</redelivery-delay>\n                        <redistribution-delay>1000</redistribution-delay>\n                        <max-size-bytes>10485760</max-size-bytes>\n                        <address-full-policy>PAGE</address-full-policy>\n                        <page-size-bytes>2097152</page-size-bytes>\n                        <message-counter-history-day-limit>10</message-counter-history-day-limit>\n                    </address-setting>\n                </address-settings>\n                <jms-connection-factories>\n                    <connection-factory name="InVmConnectionFactory">\n                        <connectors>\n                            <connector-ref connector-name="in-vm"/>\n                        </connectors>\n                        <entries>\n                            <entry name="java:/ConnectionFactory"/>\n                        </entries>\n                    </connection-factory>\n                    <connection-factory name="RemoteConnectionFactory">\n                        <connectors>\n                            <connector-ref connector-name="netty"/>\n                        </connectors>\n                        <entries>\n                            <entry name="java:jboss/exported/jms/RemoteConnectionFactory"/>\n                        </entries>\n                        <ha>true</ha>\n                        <block-on-acknowledge>true</block-on-acknowledge>\n                        <retry-interval>1000</retry-interval>\n                        <retry-interval-multiplier>1.0</retry-interval-multiplier>\n                        <reconnect-attempts>-1</reconnect-attempts>\n                    </connection-factory>\n                    <pooled-connection-factory name="hornetq-ra">\n                        <transaction mode="xa"/>\n                        <connectors>\n                            <connector-ref connector-name="in-vm"/>\n                        </connectors>\n                        <entries>\n                            <entry name="java:/JmsXA"/>\n                        </entries>\n                    </pooled-connection-factory>\n                </jms-connection-factories>\n                <jms-destinations>\n                    <jms-queue name="ExpiryQueue">\n                        <entry name="java:/jms/queue/ExpiryQueue"/>\n                    </jms-queue>\n                    <jms-queue name="DLQ">\n                        <entry name="java:/jms/queue/DLQ"/>\n                    </jms-queue>\n                    \n                </jms-destinations>\n            </hornetq-server>\n        </subsystem>|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ sed -i 's|<!-- ##MESSAGING_PORTS## -->|<socket-binding name="messaging" port="5445"/><socket-binding name="messaging-throughput" port="5455"/>|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ . /opt/eap/bin/launch/datasource.sh
++ set -x
++ . /opt/eap/bin/launch/launch-common.sh
+++ set -x
++ . /opt/eap/bin/launch/tx-datasource.sh
+++ . /opt/eap/bin/launch/launch-common.sh
++++ set -x
+ inject_datasources
+ '[' -z '' ']'
+ inject_timer_service default-file-store
+ timerservice='            <timer-service thread-pool-name="default" default-data-store="default-file-store">                <data-stores>                    <file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"/>                    <!-- ##DATASTORES## -->                </data-stores>            </timer-service>'
+ sed -i 's|<!-- ##TIMER_SERVICE## -->|            <timer-service thread-pool-name="default" default-data-store="default-file-store">                <data-stores>                    <file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"/>                    <!-- ##DATASTORES## -->                </data-stores>            </timer-service>|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ datasources=
++ echo
++ sed 's/,/ /g'
++ inject_tx_datasource
++ tx_backend=
++ '[' -n '' ']'
+ datasources=
+ db=EXTERNAL
+ '[' -n /etc/jdv-account1/jdv-account1.properties,/etc/jdv-account2/jdv-account2.properties ']'
++ echo /etc/jdv-account1/jdv-account1.properties,/etc/jdv-account2/jdv-account2.properties
++ sed 's/,/ /g'
+ for cm_file in '$(echo $DATASOURCE_CONFIG_MAP | sed "s/,/ /g")'
+ . /etc/jdv-account1/jdv-account1.properties
++ DATASOURCES=ACCOUNT1
++ ACCOUNT1_JNDI=java:/accounts-ds
++ ACCOUNT1_DRIVER=h2
++ ACCOUNT1_USERNAME=sa
++ ACCOUNT1_PASSWORD=sa
++ ACCOUNT1_DATABASE=accounts
++ ACCOUNT1_IMPORT_SQL=/home/jboss/source/injected/injected-files/customer-schema.sql
++ ACCOUNT1_PROTOCOL=jdbc:h2
++ ACCOUNT1_SERVICE_HOST=mem
++ ACCOUNT1_SERVICE_PORT=9092
++ ACCOUNT1_NONXA=true
+ '[' -n ACCOUNT1 ']'
++ echo ACCOUNT1
++ sed 's/,/ /g'
+ for datasource_prefix in '$(echo $DATASOURCES | sed "s/,/ /g")'
+ inject_datasource ACCOUNT1 ACCOUNT1
+ prefix=ACCOUNT1
+ service=ACCOUNT1
++ find_env ACCOUNT1_SERVICE_HOST
+++ printenv ACCOUNT1_SERVICE_HOST
++ var=
++ envname=ACCOUNT1_SERVICE_HOST
++ '[' -n '' ']'
++ var=mem
++ '[' -n mem ']'
++ echo mem
+ host=mem
++ find_env ACCOUNT1_SERVICE_PORT
+++ printenv ACCOUNT1_SERVICE_PORT
++ var=
++ envname=ACCOUNT1_SERVICE_PORT
++ '[' -n '' ']'
++ var=9092
++ '[' -n 9092 ']'
++ echo 9092
+ port=9092
+ '[' -z mem ']'
+ '[' -z 9092 ']'
++ get_jndi_name ACCOUNT1 ACCOUNT1
++ prefix=ACCOUNT1
+++ find_env ACCOUNT1_JNDI java:jboss/datasources/account1
++++ printenv ACCOUNT1_JNDI
+++ var=
+++ envname=ACCOUNT1_JNDI
+++ '[' -n '' ']'
+++ var=java:/accounts-ds
+++ '[' -n java:/accounts-ds ']'
+++ echo java:/accounts-ds
++ echo java:/accounts-ds
+ jndi=java:/accounts-ds
++ find_env ACCOUNT1_USERNAME
+++ printenv ACCOUNT1_USERNAME
++ var=
++ envname=ACCOUNT1_USERNAME
++ '[' -n '' ']'
++ var=sa
++ '[' -n sa ']'
++ echo sa
+ username=sa
++ find_env ACCOUNT1_PASSWORD
+++ printenv ACCOUNT1_PASSWORD
++ var=
++ envname=ACCOUNT1_PASSWORD
++ '[' -n '' ']'
++ var=sa
++ '[' -n sa ']'
++ echo sa
+ password=sa
++ find_env ACCOUNT1_DATABASE
+++ printenv ACCOUNT1_DATABASE
++ var=
++ envname=ACCOUNT1_DATABASE
++ '[' -n '' ']'
++ var=accounts
++ '[' -n accounts ']'
++ echo accounts
+ database=accounts
+ '[' -z java:/accounts-ds ']'
+ '[' -z sa ']'
+ '[' -z sa ']'
+ '[' -z accounts ']'
++ find_env ACCOUNT1_TX_ISOLATION
+++ printenv ACCOUNT1_TX_ISOLATION
++ var=
++ envname=ACCOUNT1_TX_ISOLATION
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ tx_isolation=
++ find_env ACCOUNT1_MIN_POOL_SIZE
+++ printenv ACCOUNT1_MIN_POOL_SIZE
++ var=
++ envname=ACCOUNT1_MIN_POOL_SIZE
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ min_pool_size=
++ find_env ACCOUNT1_MAX_POOL_SIZE
+++ printenv ACCOUNT1_MAX_POOL_SIZE
++ var=
++ envname=ACCOUNT1_MAX_POOL_SIZE
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ max_pool_size=
++ find_env ACCOUNT1_JTA true
+++ printenv ACCOUNT1_JTA
++ var=
++ envname=ACCOUNT1_JTA
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo true
+ jta=true
++ find_env ACCOUNT1_NONXA false
+++ printenv ACCOUNT1_NONXA
++ var=
++ envname=ACCOUNT1_NONXA
++ '[' -n '' ']'
++ var=true
++ '[' -n true ']'
++ echo true
+ NON_XA_DATASOURCE=true
++ find_env ACCOUNT1_PROTOCOL
+++ printenv ACCOUNT1_PROTOCOL
++ var=
++ envname=ACCOUNT1_PROTOCOL
++ '[' -n '' ']'
++ var=jdbc:h2
++ '[' -n jdbc:h2 ']'
++ echo jdbc:h2
+ protocol=jdbc:h2
+ case "$db" in
++ find_env ACCOUNT1_DRIVER true
+++ printenv ACCOUNT1_DRIVER
++ var=
++ envname=ACCOUNT1_DRIVER
++ '[' -n '' ']'
++ var=h2
++ '[' -n h2 ']'
++ echo h2
+ driver=h2
++ find_env ACCOUNT1_CONNECTION_CHECKER
+++ printenv ACCOUNT1_CONNECTION_CHECKER
++ var=
++ envname=ACCOUNT1_CONNECTION_CHECKER
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ checker=
++ find_env ACCOUNT1_EXCEPTION_SORTER
+++ printenv ACCOUNT1_EXCEPTION_SORTER
++ var=
++ envname=ACCOUNT1_EXCEPTION_SORTER
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ sorter=
+ '[' -n '' ']'
+ validate=false
+ checker=CHECKER
+ sorter=SORTER
+ service_name=ACCOUNT1
++ generate_datasource account1-ACCOUNT1 java:/accounts-ds sa sa mem 9092 accounts CHECKER SORTER h2 ACCOUNT1 true false jdbc:h2
++ pool_name=account1-ACCOUNT1
++ jndi_name=java:/accounts-ds
++ driver=h2
++ service_name=ACCOUNT1
++ validate=false
++ protocol=jdbc:h2
++ case "${10}" in
++ '[' -n h2 ']'
++ '[' -n true ']'
++ '[' true = true ']'
++ '[' h2 == h2 ']'
+++ find_env ACCOUNT1_IMPORT_SQL
++++ printenv ACCOUNT1_IMPORT_SQL
+++ var=
+++ envname=ACCOUNT1_IMPORT_SQL
+++ '[' -n '' ']'
+++ var=/home/jboss/source/injected/injected-files/customer-schema.sql
+++ '[' -n /home/jboss/source/injected/injected-files/customer-schema.sql ']'
+++ echo /home/jboss/source/injected/injected-files/customer-schema.sql
++ h2_import=/home/jboss/source/injected/injected-files/customer-schema.sql
++ '[' -n /home/jboss/source/injected/injected-files/customer-schema.sql ']'
++ ds=' <datasource jndi-name="java:/accounts-ds" pool-name="account1-ACCOUNT1" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>
                    <driver>h2</driver>'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ds=' <datasource jndi-name="java:/accounts-ds" pool-name="account1-ACCOUNT1" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>'
++ '[' false == true ']'
++ '[' -n true ']'
++ '[' true = true ']'
++ ds=' <datasource jndi-name="java:/accounts-ds" pool-name="account1-ACCOUNT1" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                  </datasource>'
++ '[' -n '' -a '' = ACCOUNT1 ']'
++ echo '<datasource' 'jndi-name="java:/accounts-ds"' 'pool-name="account1-ACCOUNT1"' 'enabled="true"' 'use-java-context="true">' '<connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT' FROM ''\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>' '<driver>h2</driver>' '<security>' '<user-name>sa</user-name>' '<password>sa</password>' '</security>' '</datasource>'
++ sed ':a;N;$!ba;s|\n|\\n|g'
+ datasources='<datasource jndi-name="java:/accounts-ds" pool-name="account1-ACCOUNT1" enabled="true" use-java-context="true"> <connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url> <driver>h2</driver> <security> <user-name>sa</user-name> <password>sa</password> </security> </datasource>\n'
+ for cm_file in '$(echo $DATASOURCE_CONFIG_MAP | sed "s/,/ /g")'
+ . /etc/jdv-account2/jdv-account2.properties
++ DATASOURCES=ACCOUNT2
++ ACCOUNT2_JNDI=java:/accounts2-ds
++ ACCOUNT2_DRIVER=h2
++ ACCOUNT2_USERNAME=sa
++ ACCOUNT2_PASSWORD=sa
++ ACCOUNT2_DATABASE=accounts2
++ ACCOUNT2_IMPORT_SQL=/home/jboss/source/injected/injected-files/customer-schema.sql
++ ACCOUNT2_PROTOCOL=jdbc:h2
++ ACCOUNT2_SERVICE_HOST=mem
++ ACCOUNT2_SERVICE_PORT=9092
++ ACCOUNT2_NONXA=true
+ '[' -n ACCOUNT2 ']'
++ echo ACCOUNT2
++ sed 's/,/ /g'
+ for datasource_prefix in '$(echo $DATASOURCES | sed "s/,/ /g")'
+ inject_datasource ACCOUNT2 ACCOUNT2
+ prefix=ACCOUNT2
+ service=ACCOUNT2
++ find_env ACCOUNT2_SERVICE_HOST
+++ printenv ACCOUNT2_SERVICE_HOST
++ var=
++ envname=ACCOUNT2_SERVICE_HOST
++ '[' -n '' ']'
++ var=mem
++ '[' -n mem ']'
++ echo mem
+ host=mem
++ find_env ACCOUNT2_SERVICE_PORT
+++ printenv ACCOUNT2_SERVICE_PORT
++ var=
++ envname=ACCOUNT2_SERVICE_PORT
++ '[' -n '' ']'
++ var=9092
++ '[' -n 9092 ']'
++ echo 9092
+ port=9092
+ '[' -z mem ']'
+ '[' -z 9092 ']'
++ get_jndi_name ACCOUNT2 ACCOUNT2
++ prefix=ACCOUNT2
+++ find_env ACCOUNT2_JNDI java:jboss/datasources/account2
++++ printenv ACCOUNT2_JNDI
+++ var=
+++ envname=ACCOUNT2_JNDI
+++ '[' -n '' ']'
+++ var=java:/accounts2-ds
+++ '[' -n java:/accounts2-ds ']'
+++ echo java:/accounts2-ds
++ echo java:/accounts2-ds
+ jndi=java:/accounts2-ds
++ find_env ACCOUNT2_USERNAME
+++ printenv ACCOUNT2_USERNAME
++ var=
++ envname=ACCOUNT2_USERNAME
++ '[' -n '' ']'
++ var=sa
++ '[' -n sa ']'
++ echo sa
+ username=sa
++ find_env ACCOUNT2_PASSWORD
+++ printenv ACCOUNT2_PASSWORD
++ var=
++ envname=ACCOUNT2_PASSWORD
++ '[' -n '' ']'
++ var=sa
++ '[' -n sa ']'
++ echo sa
+ password=sa
++ find_env ACCOUNT2_DATABASE
+++ printenv ACCOUNT2_DATABASE
++ var=
++ envname=ACCOUNT2_DATABASE
++ '[' -n '' ']'
++ var=accounts2
++ '[' -n accounts2 ']'
++ echo accounts2
+ database=accounts2
+ '[' -z java:/accounts2-ds ']'
+ '[' -z sa ']'
+ '[' -z sa ']'
+ '[' -z accounts2 ']'
++ find_env ACCOUNT2_TX_ISOLATION
+++ printenv ACCOUNT2_TX_ISOLATION
++ var=
++ envname=ACCOUNT2_TX_ISOLATION
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ tx_isolation=
++ find_env ACCOUNT2_MIN_POOL_SIZE
+++ printenv ACCOUNT2_MIN_POOL_SIZE
++ var=
++ envname=ACCOUNT2_MIN_POOL_SIZE
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ min_pool_size=
++ find_env ACCOUNT2_MAX_POOL_SIZE
+++ printenv ACCOUNT2_MAX_POOL_SIZE
++ var=
++ envname=ACCOUNT2_MAX_POOL_SIZE
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ max_pool_size=
++ find_env ACCOUNT2_JTA true
+++ printenv ACCOUNT2_JTA
++ var=
++ envname=ACCOUNT2_JTA
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo true
+ jta=true
++ find_env ACCOUNT2_NONXA false
+++ printenv ACCOUNT2_NONXA
++ var=
++ envname=ACCOUNT2_NONXA
++ '[' -n '' ']'
++ var=true
++ '[' -n true ']'
++ echo true
+ NON_XA_DATASOURCE=true
++ find_env ACCOUNT2_PROTOCOL
+++ printenv ACCOUNT2_PROTOCOL
++ var=
++ envname=ACCOUNT2_PROTOCOL
++ '[' -n '' ']'
++ var=jdbc:h2
++ '[' -n jdbc:h2 ']'
++ echo jdbc:h2
+ protocol=jdbc:h2
+ case "$db" in
++ find_env ACCOUNT2_DRIVER true
+++ printenv ACCOUNT2_DRIVER
++ var=
++ envname=ACCOUNT2_DRIVER
++ '[' -n '' ']'
++ var=h2
++ '[' -n h2 ']'
++ echo h2
+ driver=h2
++ find_env ACCOUNT2_CONNECTION_CHECKER
+++ printenv ACCOUNT2_CONNECTION_CHECKER
++ var=
++ envname=ACCOUNT2_CONNECTION_CHECKER
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ checker=
++ find_env ACCOUNT2_EXCEPTION_SORTER
+++ printenv ACCOUNT2_EXCEPTION_SORTER
++ var=
++ envname=ACCOUNT2_EXCEPTION_SORTER
++ '[' -n '' ']'
++ var=
++ '[' -n '' ']'
++ echo
+ sorter=
+ '[' -n '' ']'
+ validate=false
+ checker=CHECKER
+ sorter=SORTER
+ service_name=ACCOUNT2
++ generate_datasource account2-ACCOUNT2 java:/accounts2-ds sa sa mem 9092 accounts2 CHECKER SORTER h2 ACCOUNT2 true false jdbc:h2
++ pool_name=account2-ACCOUNT2
++ jndi_name=java:/accounts2-ds
++ driver=h2
++ service_name=ACCOUNT2
++ validate=false
++ protocol=jdbc:h2
++ case "${10}" in
++ '[' -n h2 ']'
++ '[' -n true ']'
++ '[' true = true ']'
++ '[' h2 == h2 ']'
+++ find_env ACCOUNT2_IMPORT_SQL
++++ printenv ACCOUNT2_IMPORT_SQL
+++ var=
+++ envname=ACCOUNT2_IMPORT_SQL
+++ '[' -n '' ']'
+++ var=/home/jboss/source/injected/injected-files/customer-schema.sql
+++ '[' -n /home/jboss/source/injected/injected-files/customer-schema.sql ']'
+++ echo /home/jboss/source/injected/injected-files/customer-schema.sql
++ h2_import=/home/jboss/source/injected/injected-files/customer-schema.sql
++ '[' -n /home/jboss/source/injected/injected-files/customer-schema.sql ']'
++ ds=' <datasource jndi-name="java:/accounts2-ds" pool-name="account2-ACCOUNT2" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:accounts2;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>
                    <driver>h2</driver>'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ds=' <datasource jndi-name="java:/accounts2-ds" pool-name="account2-ACCOUNT2" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:accounts2;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>'
++ '[' false == true ']'
++ '[' -n true ']'
++ '[' true = true ']'
++ ds=' <datasource jndi-name="java:/accounts2-ds" pool-name="account2-ACCOUNT2" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:accounts2;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                  </datasource>'
++ '[' -n '' -a '' = ACCOUNT2 ']'
++ echo '<datasource' 'jndi-name="java:/accounts2-ds"' 'pool-name="account2-ACCOUNT2"' 'enabled="true"' 'use-java-context="true">' '<connection-url>jdbc:h2:mem:accounts2;INIT=RUNSCRIPT' FROM ''\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url>' '<driver>h2</driver>' '<security>' '<user-name>sa</user-name>' '<password>sa</password>' '</security>' '</datasource>'
++ sed ':a;N;$!ba;s|\n|\\n|g'
+ datasources='<datasource jndi-name="java:/accounts-ds" pool-name="account1-ACCOUNT1" enabled="true" use-java-context="true"> <connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url> <driver>h2</driver> <security> <user-name>sa</user-name> <password>sa</password> </security> </datasource>\n<datasource jndi-name="java:/accounts2-ds" pool-name="account2-ACCOUNT2" enabled="true" use-java-context="true"> <connection-url>jdbc:h2:mem:accounts2;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url> <driver>h2</driver> <security> <user-name>sa</user-name> <password>sa</password> </security> </datasource>\n'
+ sed -i 's|<!-- ##DATASOURCES## -->|<datasource jndi-name="java:/accounts-ds" pool-name="account1-ACCOUNT1" enabled="true" use-java-context="true"> <connection-url>jdbc:h2:mem:accounts;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url> <driver>h2</driver> <security> <user-name>sa</user-name> <password>sa</password> </security> </datasource>\n<datasource jndi-name="java:/accounts2-ds" pool-name="account2-ACCOUNT2" enabled="true" use-java-context="true"> <connection-url>jdbc:h2:mem:accounts2;INIT=RUNSCRIPT FROM '\''/home/jboss/source/injected/injected-files/customer-schema.sql'\''\;</connection-url> <driver>h2</driver> <security> <user-name>sa</user-name> <password>sa</password> </security> </datasource>\n|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ inject_drivers
+ drivers=
+ '[' -n '' ']'
+ . /opt/eap/bin/launch/resource-adapters.sh
++ set -x
++ . /opt/eap/bin/launch/launch-common.sh
+++ set -x
+ inject_resource_adapters
++ hostname
+ hostname=datavirt-1-5284s
+ resource_adapters=
+ '[' -n '' ']'
+ sed -i 's|<!-- ##RESOURCE_ADAPTERS## -->||' /opt/eap/standalone/configuration/standalone-openshift.xml
+ . /opt/eap/bin/launch/admin.sh
+ configure_administration
+ '[' -n '' ']'
+ . /opt/eap/bin/launch/ha.sh
+ check_view_pods_permission
+ '[' -n _ ']'
+ pods_url=https://172.30.0.1:443/api/v1/namespaces/demo/pods
+ '[' -n application=datavirt ']'
+ pods_labels=labels=application=datavirt
++ cat /var/run/secrets/kubernetes.io/serviceaccount/token
+ pods_auth='Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZW1vIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZHBoNHYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjVkZmJmZjNhLTE5NTctMTFlNi1hZTEzLTUyNTQwMGFiM2IwZCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZW1vOmRlZmF1bHQifQ.K8D_ebo8YraGR3HtbtYlyZZcL5INjvt4RRNB1s_KaSXGEsuBkMVYf8cW6GSWRVWSA193DeArm4XysTifih7uli5Eja0sBxUzSt1uBJjPOijJwDU6EllhTRzMsP7feKHVH66Pk2XCM5gyWBvhbJbe8XQNgKi86FmrbL9w9IaF13Lv5pEVCX-Eo5l8udzTPKeutLzLU8F7Am9Kx_M4X_gCF3SJPFloZIcxhWNvcpk9QhfPGQHxvLEJzQJQ8STnbAcuCdMnf0aLhqC41hqDIewjRd1wXF_3ev13zY6EQAjYwmxkDkxJKmySQ1pGNq31onRV4JnTIQ0LQ17Mxym9rVcywQ'
++ curl -s -o /dev/null -w '%{http_code}' -G --data-urlencode labels=application=datavirt -k -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZW1vIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZHBoNHYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjVkZmJmZjNhLTE5NTctMTFlNi1hZTEzLTUyNTQwMGFiM2IwZCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZW1vOmRlZmF1bHQifQ.K8D_ebo8YraGR3HtbtYlyZZcL5INjvt4RRNB1s_KaSXGEsuBkMVYf8cW6GSWRVWSA193DeArm4XysTifih7uli5Eja0sBxUzSt1uBJjPOijJwDU6EllhTRzMsP7feKHVH66Pk2XCM5gyWBvhbJbe8XQNgKi86FmrbL9w9IaF13Lv5pEVCX-Eo5l8udzTPKeutLzLU8F7Am9Kx_M4X_gCF3SJPFloZIcxhWNvcpk9QhfPGQHxvLEJzQJQ8STnbAcuCdMnf0aLhqC41hqDIewjRd1wXF_3ev13zY6EQAjYwmxkDkxJKmySQ1pGNq31onRV4JnTIQ0LQ17Mxym9rVcywQ' https://172.30.0.1:443/api/v1/namespaces/demo/pods
+ pods_code=200
+ '[' 200 = 200 ']'
+ echo 'Service account has sufficient permissions to view pods in kubernetes (HTTP 200). Clustering will be available.'
Service account has sufficient permissions to view pods in kubernetes (HTTP 200). Clustering will be available.
+ configure_ha
++ hostname -i
+ IP_ADDR=10.1.0.2
+ JBOSS_HA_ARGS='-b 10.1.0.2'
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n datavirt-1-5284s ']'
+ JBOSS_NODE_NAME=datavirt-1-5284s
+ '[' -n datavirt-1-5284s ']'
+ '[' 16 -gt 23 ']'
+ JBOSS_HA_ARGS='-b 10.1.0.2 -Djboss.node.name=datavirt-1-5284s'
+ '[' -z xw11Gh4k ']'
+ JGROUPS_AUTH='\n                <protocol type="AUTH">\n                    <property name="auth_class">org.jgroups.auth.MD5Token</property>\n                    <property name="token_hash">SHA</property>\n                    <property name="auth_value">xw11Gh4k</property>\n                </protocol>\n'
+ sed -i 's|<!-- ##JGROUPS_AUTH## -->|\n                <protocol type="AUTH">\n                    <property name="auth_class">org.jgroups.auth.MD5Token</property>\n                    <property name="token_hash">SHA</property>\n                    <property name="auth_value">xw11Gh4k</property>\n                </protocol>\n|g' /opt/eap/standalone/configuration/standalone-openshift.xml
+ configure_jgroups_encryption
+ jgroups_encrypt=
+ '[' -n '' ']'
+ sed -i 's|<!-- ##JGROUPS_ENCRYPT## -->||g' /opt/eap/standalone/configuration/standalone-openshift.xml
+ . /opt/eap/bin/launch/https.sh
+ configure_https
+ https='<!-- No HTTPS configuration discovered -->'
+ '[' -n '' -a -n '' -a -n '' -a -n '' ']'
+ '[' -n '' -o -n '' -o -n '' -o -n '' ']'
+ sed -i 's|<!-- ##HTTPS## -->|<!-- No HTTPS configuration discovered -->|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ . /opt/eap/bin/launch/json_logging.sh
+ configure_json_logging
+ sed -i 's|^.*\.module=org\.jboss\.logmanager\.ext$||' /opt/eap/standalone/configuration/logging.properties
+ . /opt/eap/bin/launch/security-domains.sh
+ configure_security_domains
+ domains='<!-- no additional security domains configured -->'
+ '[' -n '' ']'
+ sed -i 's|<!-- ##ADDITIONAL_SECURITY_DOMAINS## -->|<!-- no additional security domains configured -->|' /opt/eap/standalone/configuration/standalone-openshift.xml
+ . /opt/eap/bin/launch/keycloak.sh
++ KEYCLOAK_REALM_SUBSYSTEM_FILE=/opt/eap/bin/launch/keycloak-realm-subsystem
++ KEYCLOAK_SAML_REALM_SUBSYSTEM_FILE=/opt/eap/bin/launch/keycloak-saml-realm-subsystem
++ KEYCLOAK_DEPLOYMENT_SUBSYSTEM_FILE=/opt/eap/bin/launch/keycloak-deployment-subsystem
++ KEYCLOAK_SAML_DEPLOYMENT_SUBSYSTEM_FILE=/opt/eap/bin/launch/keycloak-saml-deployment-subsystem
++ KEYCLOAK_SAML_SP_SUBSYSTEM_FILE=/opt/eap/bin/launch/keycloak-saml-sp-subsystem
++ KEYCLOAK_SECURITY_DOMAIN_FILE=/opt/eap/bin/launch/keycloak-security-domain
++ OPENIDCONNECT=KEYCLOAK
++ SAML=KEYCLOAK-SAML
++ SECURE_DEPLOYMENTS=/opt/eap/standalone/configuration/secure-deployments
++ SECURE_SAML_DEPLOYMENTS=/opt/eap/standalone/configuration/secure-saml-deployments
++ CURL='curl -s'
++ '[' -n '' ']'
+ configure_keycloak
+ '[' -f /opt/eap/standalone/configuration/secure-deployments ']'
+ '[' -f /opt/eap/standalone/configuration/secure-saml-deployments ']'
Missing SSO_URL. Unable to properly configure SSO-enabled applications
+ '[' -n '' ']'
+ echo 'Missing SSO_URL. Unable to properly configure SSO-enabled applications'
+ . /opt/eap/bin/launch/teiid.sh
++ set -x
++ . /opt/eap/bin/launch/launch-common.sh
+++ set -x
+++ hostname
++ hostname=datavirt-1-5284s
+ configure_teiid
+ import_sql_files
+ IFS=,
+ read -a db_backends
+ configure_translators
+ teiid_translators=
+ '[' -n '' ']'
+ sed -i 's|<!-- ##TEIID_TRANSLATORS## -->||' /opt/eap/standalone/configuration/standalone-openshift.xml
+ echo 'Running jboss-datavirt-6/datavirt63-openshift image, version 1.4-dev'
+ exec /opt/eap/bin/standalone.sh -c standalone-openshift.xml -bmanagement 127.0.0.1 -b 10.1.0.2 -Djboss.node.name=datavirt-1-5284s -Djboss.messaging.cluster.password=OYHdMQDI
Running jboss-datavirt-6/datavirt63-openshift image, version 1.4-dev
=========================================================================

  JBoss Bootstrap Environment

  JBOSS_HOME: /opt/eap

  JAVA: /usr/lib/jvm/java-1.8.0/bin/java

  JAVA_OPTS:  -server -XX:+UseCompressedOops -verbose:gc -Xloggc:"/opt/eap/standalone/log/gc.log" -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=3M -XX:-TraceClassUnloading -Xms1303m -Xmx1303m  -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.logmanager -Djava.awt.headless=true -Djboss.modules.policy-permissions=true -Xbootclasspath/p:/opt/eap/jboss-modules.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-1.5.4.Final-redhat-1.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/ext/main/javax.json-1.0.4.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/ext/main/jboss-logmanager-ext-1.0.0.Alpha2-redhat-1.jar -Djava.util.logging.manager=org.jboss.logmanager.LogManager -javaagent:/opt/eap/jolokia.jar=port=8778,protocol=https,caCert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt,clientPrincipal=cn=system:master-proxy,useSslClientAuthentication=true,extraClientCheck=true,host=0.0.0.0,discoveryEnabled=false -Djava.security.egd=file:/dev/./urandom 

=========================================================================

Picked up JAVA_TOOL_OPTIONS: -Duser.home=/home/jboss -Duser.name=jboss
I> No access restrictor found, access to all MBean is allowed
Jolokia: Agent started with URL https://10.1.0.2:8778/jolokia/
[0m11:49:39,849 INFO  [org.jboss.modules] (main) JBoss Modules version 1.3.7.Final-redhat-1
[0m[0m11:49:40,103 INFO  [org.jboss.msc] (main) JBoss MSC version 1.1.5.Final-redhat-1
[0m[0m11:49:40,197 INFO  [org.jboss.as] (MSC service thread 1-8) JBAS015899: JBoss Red Hat JBoss Data Virtualization 6.3.0 (AS 7.5.4.Final-redhat-4) starting
[0m[32m11:49:40,203 DEBUG [org.jboss.as.config] (MSC service thread 1-8) Configured system properties:
	[Standalone] = 
	awt.toolkit = sun.awt.X11.XToolkit
	file.encoding = ANSI_X3.4-1968
	file.encoding.pkg = sun.io
	file.separator = /
	java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
	java.awt.headless = true
	java.awt.printerjob = sun.print.PSPrinterJob
	java.class.path = /opt/eap/jboss-modules.jar:/opt/eap/jolokia.jar
	java.class.version = 52.0
	java.endorsed.dirs = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/endorsed
	java.ext.dirs = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/ext:/usr/java/packages/lib/ext
	java.home = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre
	java.io.tmpdir = /tmp
	java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
	java.net.preferIPv4Stack = true
	java.runtime.name = OpenJDK Runtime Environment
	java.runtime.version = 1.8.0_101-b13
	java.security.egd = file:/dev/./urandom
	java.specification.name = Java Platform API Specification
	java.specification.vendor = Oracle Corporation
	java.specification.version = 1.8
	java.util.logging.manager = org.jboss.logmanager.LogManager
	java.vendor = Oracle Corporation
	java.vendor.url = http://java.oracle.com/
	java.vendor.url.bug = http://bugreport.sun.com/bugreport/
	java.version = 1.8.0_101
	java.vm.info = mixed mode
	java.vm.name = OpenJDK 64-Bit Server VM
	java.vm.specification.name = Java Virtual Machine Specification
	java.vm.specification.vendor = Oracle Corporation
	java.vm.specification.version = 1.8
	java.vm.vendor = Oracle Corporation
	java.vm.version = 25.101-b13
	javax.management.builder.initial = org.jboss.as.jmx.PluggableMBeanServerBuilder
	javax.xml.datatype.DatatypeFactory = __redirected.__DatatypeFactory
	javax.xml.parsers.DocumentBuilderFactory = __redirected.__DocumentBuilderFactory
	javax.xml.parsers.SAXParserFactory = __redirected.__SAXParserFactory
	javax.xml.stream.XMLEventFactory = __redirected.__XMLEventFactory
	javax.xml.stream.XMLInputFactory = __redirected.__XMLInputFactory
	javax.xml.stream.XMLOutputFactory = __redirected.__XMLOutputFactory
	javax.xml.transform.TransformerFactory = __redirected.__TransformerFactory
	javax.xml.validation.SchemaFactory:http://www.w3.org/2001/XMLSchema = __redirected.__SchemaFactory
	javax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom = __redirected.__XPathFactory
	jboss.bind.address = 10.1.0.2
	jboss.bind.address.management = 127.0.0.1
	jboss.home.dir = /opt/eap
	jboss.host.name = datavirt-1-5284s
	jboss.messaging.cluster.password = <redacted>
	jboss.modules.dir = /opt/eap/modules
	jboss.modules.policy-permissions = true
	jboss.modules.system.pkgs = org.jboss.logmanager
	jboss.node.name = datavirt-1-5284s
	jboss.qualified.host.name = datavirt-1-5284s
	jboss.server.base.dir = /opt/eap/standalone
	jboss.server.config.dir = /opt/eap/standalone/configuration
	jboss.server.data.dir = /opt/eap/standalone/data
	jboss.server.deploy.dir = /opt/eap/standalone/data/content
	jboss.server.log.dir = /opt/eap/standalone/log
	jboss.server.name = datavirt-1-5284s
	jboss.server.persist.config = true
	jboss.server.temp.dir = /opt/eap/standalone/tmp
	jolokia.agent = https://10.1.0.2:8778/jolokia/
	line.separator = 

	logging.configuration = file:/opt/eap/standalone/configuration/logging.properties
	module.path = /opt/eap/modules
	org.jboss.boot.log.file = /opt/eap/standalone/log/server.log
	org.jboss.resolver.warning = true
	org.xml.sax.driver = __redirected.__XMLReaderFactory
	os.arch = amd64
	os.name = Linux
	os.version = 3.10.0-327.28.2.el7.x86_64
	path.separator = :
	sun.arch.data.model = 64
	sun.boot.class.path = /opt/eap/jboss-modules.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-1.5.4.Final-redhat-1.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/ext/main/javax.json-1.0.4.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/ext/main/jboss-logmanager-ext-1.0.0.Alpha2-redhat-1.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/classes
	sun.boot.library.path = /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.el7_2.x86_64/jre/lib/amd64
	sun.cpu.endian = little
	sun.cpu.isalist = 
	sun.io.unicode.encoding = UnicodeLittle
	sun.java.command = /opt/eap/jboss-modules.jar -mp /opt/eap/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -Djboss.home.dir=/opt/eap -Djboss.server.base.dir=/opt/eap/standalone -c standalone-openshift.xml -bmanagement 127.0.0.1 -b 10.1.0.2 -Djboss.node.name=datavirt-1-5284s -Djboss.messaging.cluster.password=OYHdMQDI
	sun.java.launcher = SUN_STANDARD
	sun.jnu.encoding = ANSI_X3.4-1968
	sun.management.compiler = HotSpot 64-Bit Tiered Compilers
	sun.os.patch.level = unknown
	user.country = US
	user.dir = /home/jboss
	user.home = /home/jboss
	user.language = en
	user.name = jboss
	user.timezone = America/New_York
[0m[32m11:49:40,203 DEBUG [org.jboss.as.config] (MSC service thread 1-8) VM Arguments: -Duser.home=/home/jboss -Duser.name=jboss -D[Standalone] -XX:+UseCompressedOops -verbose:gc -Xloggc:/opt/eap/standalone/log/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=3M -XX:-TraceClassUnloading -Xms1303m -Xmx1303m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.logmanager -Djava.awt.headless=true -Djboss.modules.policy-permissions=true -Xbootclasspath/p:/opt/eap/jboss-modules.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-1.5.4.Final-redhat-1.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/ext/main/javax.json-1.0.4.jar:/opt/eap/modules/system/layers/base/org/jboss/logmanager/ext/main/jboss-logmanager-ext-1.0.0.Alpha2-redhat-1.jar -Djava.util.logging.manager=org.jboss.logmanager.LogManager -javaagent:/opt/eap/jolokia.jar=port=8778,protocol=https,caCert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt,clientPrincipal=cn=system:master-proxy,useSslClientAuthentication=true,extraClientCheck=true,host=0.0.0.0,discoveryEnabled=false -Djava.security.egd=file:/dev/./urandom -Dorg.jboss.boot.log.file=/opt/eap/standalone/log/server.log -Dlogging.configuration=file:/opt/eap/standalone/configuration/logging.properties 
[0m[31m11:49:41,108 ERROR [org.jboss.as.server] (Controller Boot Thread) JBAS015956: Caught exception during boot: org.jboss.as.controller.persistence.ConfigurationPersistenceException: JBAS014676: Failed to parse configuration
	at org.jboss.as.controller.persistence.XmlConfigurationPersister.load(XmlConfigurationPersister.java:141)
	at org.jboss.as.server.ServerService.boot(ServerService.java:336)
	at org.jboss.as.controller.AbstractControllerService$1.run(AbstractControllerService.java:263)
	at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_101]
Caused by: java.lang.IllegalArgumentException
	at org.jboss.dmr.StringModelValue.asBoolean(StringModelValue.java:154)
	at org.jboss.dmr.ModelNode.asBoolean(ModelNode.java:262)
	at org.jboss.as.controller.SimpleAttributeDefinition.parse(SimpleAttributeDefinition.java:331)
	at org.jboss.as.controller.SimpleAttributeDefinition.parse(SimpleAttributeDefinition.java:188)
	at org.jboss.as.controller.SimpleAttributeDefinition.parseAndSetParameter(SimpleAttributeDefinition.java:243)
	at org.jboss.as.server.deployment.scanner.DeploymentScannerParser_1_1.parseScanner(DeploymentScannerParser_1_1.java:167)
	at org.jboss.as.server.deployment.scanner.DeploymentScannerParser_1_1.readElement(DeploymentScannerParser_1_1.java:114)
	at org.jboss.as.server.deployment.scanner.DeploymentScannerParser_1_1.readElement(DeploymentScannerParser_1_1.java:50)
	at org.jboss.staxmapper.XMLMapperImpl.processNested(XMLMapperImpl.java:110)
	at org.jboss.staxmapper.XMLExtendedStreamReaderImpl.handleAny(XMLExtendedStreamReaderImpl.java:69)
	at org.jboss.as.server.parsing.StandaloneXml.parseServerProfile(StandaloneXml.java:1094)
	at org.jboss.as.server.parsing.StandaloneXml.readServerElement_1_4(StandaloneXml.java:469)
	at org.jboss.as.server.parsing.StandaloneXml.readElement(StandaloneXml.java:145)
	at org.jboss.as.server.parsing.StandaloneXml.readElement(StandaloneXml.java:107)
	at org.jboss.staxmapper.XMLMapperImpl.processNested(XMLMapperImpl.java:110)
	at org.jboss.staxmapper.XMLMapperImpl.parseDocument(XMLMapperImpl.java:69)
	at org.jboss.as.controller.persistence.XmlConfigurationPersister.load(XmlConfigurationPersister.java:133)
	... 3 more

[0m[31m11:49:41,108 FATAL [org.jboss.as.server] (Controller Boot Thread) JBAS015957: Server boot has failed in an unrecoverable manner; exiting. See previous messages for details.
[0m[0m11:49:41,121 INFO  [org.jboss.as] (MSC service thread 1-5) JBAS015950: JBoss Red Hat JBoss Data Virtualization 6.3.0 (AS 7.5.4.Final-redhat-4) stopped in 8ms
[0m
