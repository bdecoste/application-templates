{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-jboss",
            "description": "Application template for JBoss Data Virtualization 6.3 services built using S2I.",
            "tags": "jdv,datavirt,jboss,xpaas",
            "version": "1.4.0"
        },
        "name": "jdv63-basic-s2i"
    },
    "labels": {
        "template": "jdv63-basic-s2i",
        "xpaas": "1.4.0"
    },
    "message": "A new data service has been created in your project.  The username/password for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please be sure to create a secret named ${CONFIGURATION_NAME} containing the datasource configuration details required by the deployed VDB(s).",
    "parameters": [
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "value": "jdv-app",
            "required": true
        },
        {
            "description": "The name of the secret containing configuration properties for the data sources.",
            "displayName": "Configuration Secret Name",
            "name": "CONFIGURATION_NAME",
            "value": "jdv-app-config",
            "required": true
        },
        {
            "description": "Specify a custom hostname for the http route.  Leave blank to use default hostname, e.g.: <service-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom http Route Hostname",
            "name": "HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "description": "The URL of the repository with your application source code.",
            "displayName": "Git Repository URL",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/teiid/teiid-quickstarts",
            "required": true
        },
        {
            "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
            "displayName": "Git Reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "8.12",
            "required": false
        },
        {
            "description": "Set this to the relative path to your project if it is not in the root of your repository.",
            "displayName": "Context Directory",
            "name": "CONTEXT_DIR",
            "value": "dynamicvdb-datafederation",
            "required": false
        },
        {
            "description": "Username associated with Teiid data service.",
            "displayName": "Teiid Username",
            "name": "TEIID_USERNAME",
            "from": "[\\a]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Password for Teiid user.",
            "displayName": "Teiid User Password",
            "name": "TEIID_PASSWORD",
            "from": "[\\a\\A]{8}[\\d]{1}[\\A]{1}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Username associated with ModeShape.",
            "displayName": "ModeShape Username",
            "name": "MODESHAPE_USERNAME",
            "from": "[\\a]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Password for ModeShape user.",
            "displayName": "ModeShape User Password",
            "name": "MODESHAPE_PASSWORD",
            "from": "[\\a\\A]{8}[\\d]{1}[\\A]{1}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "A secret string used to configure the GitHub webhook.",
            "displayName": "Github Webhook Secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "A secret string used to configure the Generic webhook.",
            "displayName": "Generic Webhook Secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "Password used by JGroups to authenticate nodes in the cluster.",
            "displayName": "JGroups Cluster Password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Controls whether exploded deployment content should be automatically deployed",
            "displayName": "Deploy Exploded Archives",
            "name": "AUTO_DEPLOY_EXPLODED",
            "value": "false",
            "required": false
        },
        {
            "description": "The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This is the URL through which the user will be redirected when a login or token is required by the application.",
            "name": "SSO_URL",
            "value": "",
            "required": true
        },
        {
            "description": "The URL for the interal SSO service, where secure-sso is the kubernetes service exposed by the SSO server.  This is used to create the application client(s) (see SSO_USERNAME).  This can also be the same as SSO_URL.",
            "name": "SSO_SERVICE_URL",
            "value": "https://secure-sso:8443/auth",
            "required": false
        },
        {
            "description": "The SSO realm to which the application client(s) should be associated (e.g. demo).",
            "name": "SSO_REALM",
            "value": "",
            "required": true
        },
        {
            "description": "The username used to access the SSO service.  This is used to create the appliction client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME specified through one of the sso70-* templates.",
            "name": "SSO_USERNAME",
            "value": "",
            "required": false
        },
        {
            "description": "The password for the SSO service user.",
            "name": "SSO_PASSWORD",
            "value": "",
            "required": false
        },
        {
            "description": "SSO Public Key. Public key is recommended to be passed into the template to avoid man-in-the-middle security vulnerability.  This can be retrieved from the SSO server, for the specified realm.",
            "name": "SSO_PUBLIC_KEY",
            "value": "",
            "required": false
        },
        {
            "description": "SSO Client Access Type",
            "name": "SSO_BEARER_ONLY",
            "value": "",
            "required": false
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder.  If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR",
            "value": "app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target",
            "required": false
        },
        {
            "description": "The name of the secret containing the keystore file",
            "name": "SSO_SAML_KEYSTORE_SECRET",
            "value": "eap-app-secret",
            "required": false
        },
        {
            "description": "The name of the keystore file within the secret",
            "name": "SSO_SAML_KEYSTORE",
            "value": "keystore.jks",
            "required": false
        },
        {
            "description": "The name associated with the server certificate",
            "name": "SSO_SAML_CERTIFICATE_NAME",
            "value": "jboss",
            "required": false
        },
        {
            "description": "The password for the keystore and certificate",
            "name": "SSO_SAML_KEYSTORE_PASSWORD",
            "value": "mykeystorepass",
            "required": false
        },
        {
            "description": "The SSO Client Secret for Confidential Access",
            "name": "SSO_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Enable CORS for SSO applications",
            "name": "SSO_ENABLE_CORS",
            "value": "false",
            "required": false
        },
        {
            "description": "SSO logout page for SAML applications",
            "name": "SSO_SAML_LOGOUT_PAGE",
            "value": "/",
            "required": false
        },
        {
            "description": "If true SSL communication between EAP and the SSO Server will be insecure (i.e. certificate validation is disabled with curl)",
            "name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
            "value": "true",
            "required": false
        },
        {
            "description": "The name of the truststore file within the secret (e.g. truststore.jks)",
            "name": "SSO_TRUSTSTORE",
            "value": "",
            "required": false
        },
        {
            "description": "The password for the truststore and certificate (e.g. mykeystorepass)",
            "name": "SSO_TRUSTSTORE_PASSWORD",
            "value": "",
            "required": false
        },
        {
            "description": "The name of the secret containing the truststore file (e.g. truststore-secret). Used for volume secretName",
            "name": "SSO_TRUSTSTORE_SECRET",
            "value": "eap-app-secret",
            "required": false
        },
        {
            "description": "Comma delimited list of war deployments that should be SSO enabled for OpenID Connect",
            "name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
            "value": "teiid-odata.war,teiid-olingo-odata4.war",
            "required": false
        },
        {
            "description": "Comma delimited list of war deployments that should be SSO enabled for SAML",
            "name": "SSO_SAML_DEPLOYMENTS",
            "value": "",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "targetPort": "http"
                    },
                    {
                        "name": "jdbc",
                        "port": 31000,
                        "targetPort": "jdbc"
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The data virtualization services."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http (REST) service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "port": {
                    "targetPort": "http"
                },
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datavirt63-openshift:1.0"
                        }
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "volumeMounts": [
                                    {
                                        "name": "sso-saml-keystore-volume",
                                        "mountPath": "/etc/sso-saml-secret-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "name": "sso-truststore-volume",
                                        "mountPath": "/etc/sso-secret-volume",
                                        "readOnly": true
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    }
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "jdbc",
                                        "containerPort": 31000,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOSTNAME_HTTP",
                                        "value": "${HOSTNAME_HTTP}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "AUTO_DEPLOY_EXPLODED",
                                        "value": "${AUTO_DEPLOY_EXPLODED}"
                                    },
                                    {
                                        "name": "TEIID_USERNAME",
                                        "value": "${TEIID_USERNAME}"
                                    },
                                    {
                                        "name": "TEIID_PASSWORD",
                                        "value": "${TEIID_PASSWORD}"
                                    },
                                    {
                                        "name": "MODESHAPE_USERNAME",
                                        "value": "${MODESHAPE_USERNAME}"
                                    },
                                    {
                                        "name": "MODESHAPE_PASSWORD",
                                        "value": "${MODESHAPE_PASSWORD}"
                                    },
                                    {
                                        "name": "ENV_FILES",
                                        "value": "/etc/datavirt-environment/*"
                                    },
                                    {
                                        "name": "SSO_URL",
                                        "value": "${SSO_URL}"
                                    },
                                    {
                                        "name": "SSO_SERVICE_URL",
                                        "value": "${SSO_SERVICE_URL}"
                                    },
                                    {
                                        "name": "SSO_REALM",
                                        "value": "${SSO_REALM}"
                                    },
                                    {
                                        "name": "SSO_USERNAME",
                                        "value": "${SSO_USERNAME}"
                                    },
                                    {
                                        "name": "SSO_PASSWORD",
                                        "value": "${SSO_PASSWORD}"
                                    },
                                    {
                                        "name": "SSO_PUBLIC_KEY",
                                        "value": "${SSO_PUBLIC_KEY}"
                                    },
                                    {
                                        "name": "SSO_BEARER_ONLY",
                                        "value": "${SSO_BEARER_ONLY}"
                                    },
                                    {
                                        "name": "SSO_SAML_KEYSTORE_SECRET",
                                        "value": "${SSO_SAML_KEYSTORE_SECRET}"
                                    },
                                    {
                                        "name": "SSO_SAML_KEYSTORE",
                                        "value": "${SSO_SAML_KEYSTORE}"
                                    },
                                    {
                                        "name": "SSO_SAML_KEYSTORE_DIR",
                                        "value": "/etc/sso-saml-secret-volume"
                                    },
                                    {
                                        "name": "SSO_SAML_CERTIFICATE_NAME",
                                        "value": "${SSO_SAML_CERTIFICATE_NAME}"
                                    },
                                    {
                                        "name": "SSO_SAML_KEYSTORE_PASSWORD",
                                        "value": "${SSO_SAML_KEYSTORE_PASSWORD}"
                                    },
                                    {
                                        "name": "SSO_SECRET",
                                        "value": "${SSO_SECRET}"
                                    },
                                    {
                                        "name": "SSO_ENABLE_CORS",
                                        "value": "${SSO_ENABLE_CORS}"
                                    },
                                    {
                                        "name": "SSO_SAML_LOGOUT_PAGE",
                                        "value": "${SSO_SAML_LOGOUT_PAGE}"
                                    },
                                    {
                                        "name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
                                        "value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
                                    },
                                    {
                                        "name": "SSO_TRUSTSTORE",
                                        "value": "${SSO_TRUSTSTORE}"
                                    },
                                    {
                                        "name": "SSO_TRUSTSTORE_DIR",
                                        "value": "/etc/sso-secret-volume"
                                    },
                                    {
                                        "name": "SSO_TRUSTSTORE_PASSWORD",
                                        "value": "${SSO_TRUSTSTORE_PASSWORD}"
                                    },
                                    {
                                        "name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
                                        "value": "${SSO_OPENIDCONNECT_DEPLOYMENTS}"
                                    },
                                    {
                                        "name": "SSO_SAML_DEPLOYMENTS",
                                        "value": "${SSO_SAML_DEPLOYMENTS}"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "sso-saml-keystore-volume",
                                "secret": {
                                    "secretName": "${SSO_SAML_KEYSTORE_SECRET}"
                                }
                            },
                            {
                                "name": "sso-truststore-volume",
                                "secret": {
                                    "secretName": "${SSO_TRUSTSTORE_SECRET}"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}
