{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-jboss",
            "description": "Application template for EAP 6 applications built using S2I.",
            "tags": "eap,javaee,java,jboss,xpaas",
            "version": "1.4.0"
        },
        "name": "datavirt63-basic-s2i"
    },
    "labels": {
        "template": "datavirt63-basic-s2i",
        "xpaas": "1.4.0"
    },
    "parameters": [
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "datavirt",
            "required": true
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTPS",
            "value": "",
            "required": false
        },
        {
            "description": "Git source URI for application",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/bdecoste/jdv-test",
            "required": true
        },
        {
            "description": "Git branch/tag reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "master",
            "required": false
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "CONTEXT_DIR",
            "value": "",
            "required": false
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder.  If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR",
            "value": "",
            "required": false
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "name": "POSTGRESQL_JNDI",
            "value": "java:/postgresql-ds",
            "required": false
        },
        {
            "description": "Database name",
            "name": "POSTGRESQL_DATABASE",
            "value": "jdv",
            "required": true
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "name": "POSTGRESQL_MIN_POOL_SIZE",
            "value": "5",
            "required": false
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "name": "POSTGRESQL_MAX_POOL_SIZE",
            "value": "20",
            "required": false
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "name": "POSTGRESQL_TX_ISOLATION",
            "value": "TRANSACTION_READ_UNCOMMITTED",
            "required": false
        },
        {
            "description": "Database user name",
            "name": "POSTGRESQL_USERNAME",
            "value": "jdv",
            "required": false
        },
        {
            "description": "Database user password",
            "name": "POSTGRESQL_PASSWORD",
            "value": "jdv",
            "required": false
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "name": "MYSQL_JNDI",
            "value": "java:/mysql-ds",
            "required": false
        },
        {
            "description": "Database name",
            "name": "MYSQL_DATABASE",
            "value": "jdv",
            "required": true
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "name": "MYSQL_MIN_POOL_SIZE",
            "value": "5",
            "required": false
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "name": "MYSQL_MAX_POOL_SIZE",
            "value": "20",
            "required": false
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "name": "MYSQL_TX_ISOLATION",
            "value": "TRANSACTION_READ_UNCOMMITTED",
            "required": false
        },
        {
            "description": "Database user name",
            "name": "MYSQL_USERNAME",
            "value": "jdv",
            "required": false
        },
        {
            "description": "Database user password",
            "name": "MYSQL_PASSWORD",
            "value": "jdv",
            "required": false
        },
        {
            "description": "HornetQ cluster admin password",
            "name": "HORNETQ_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "GitHub trigger secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Generic build trigger secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "JGroups cluster password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's http port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 31000,
                        "targetPort": 31000
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "jdbc-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The Teiid jdbc port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "name": "postgresql",
                        "port": 5432,
                        "targetPort": 5432,
                        "nodePort": 0,
                        "protocol": "TCP"
                    }
                ],
                "selector": {
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-postgresql"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "name": "mysql",
                        "port": 3306,
                        "targetPort": 3306,
                        "nodePort": 0,
                        "protocol": "TCP"
                    }
                ],
                "selector": {
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-mysql"
            }
        },
        {
            "kind": "Endpoints",
            "apiVersion": "v1",
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "192.168.1.48"
                        }
                    ],
                    "ports": [
                        {
                            "name": "postgresql",
                            "port": 5432
                        }
                    ]
                }
            ],
            "metadata": {
                "name": "${APPLICATION_NAME}-postgresql"
            }
        },
        {
            "kind": "Endpoints",
            "apiVersion": "v1",
            "subsets": [
                {
                    "addresses": [
                        {
                            "ip": "192.168.1.48"
                        }
                    ],
                    "ports": [
                        {
                            "name": "mysql",
                            "port": 3306
                        }
                    ]
                }
            ],
            "metadata": {
                "name": "${APPLICATION_NAME}-mysql"
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-jdbc",
            "metadata": {
                "name": "jdbc-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's jdbc service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "to": {
                    "name": "jdbc-${APPLICATION_NAME}"
                },
                "tls": {
                    "termination": "passthrough"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datavirt63-openshift:1.4"
                        },
                         "env": [
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            },
                            {
                                "name": "CONTEXT_DIR",
                                "value": "${CONTEXT_DIR}"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStream",
                                "name": "${APPLICATION_NAME}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    }
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "jdbc",
                                        "containerPort": 31000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "DB_SERVICE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=POSTGRESQL,${APPLICATION_NAME}-mysql=MYSQL"
                                    },
                                    {
                                        "name": "POSTGRESQL_JNDI",
                                        "value": "${POSTGRESQL_JNDI}"
                                    },
                                    {
                                        "name": "POSTGRESQL_USERNAME",
                                        "value": "${POSTGRESQL_USERNAME}"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "${POSTGRESQL_PASSWORD}"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "${POSTGRESQL_DATABASE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MIN_POOL_SIZE",
                                        "value": "${POSTGRESQL_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_POOL_SIZE",
                                        "value": "${POSTGRESQL_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_TX_ISOLATION",
                                        "value": "${POSTGRESQL_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "MYSQL_JNDI",
                                        "value": "${MYSQL_JNDI}"
                                    },
                                    {
                                        "name": "MYSQL_USERNAME",
                                        "value": "${MYSQL_USERNAME}"
                                    },
                                    {
                                        "name": "MYSQL_PASSWORD",
                                        "value": "${MYSQL_PASSWORD}"
                                    },
                                    {
                                        "name": "MYSQL_DATABASE",
                                        "value": "${MYSQL_DATABASE}"
                                    },
                                    {
                                        "name": "MYSQL_MIN_POOL_SIZE",
                                        "value": "${MYSQL_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "MYSQL_MAX_POOL_SIZE",
                                        "value": "${MYSQL_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "MYSQL_TX_ISOLATION",
                                        "value": "${MYSQL_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HORNETQ_CLUSTER_PASSWORD",
                                        "value": "${HORNETQ_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ]
}
