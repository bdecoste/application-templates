{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "description": "Application template for KEYCLOAK 6 PostgreSQL applications built using STI.",
            "iconClass" : "icon-jboss"
        },
        "name": "jdv-basic"
    },
    "labels": {
        "template": "jdv-basic"
    },
    "parameters": [
        {
            "description": "KEYCLOAK Release version, e.g. 6.4, etc.",
            "name": "KEYCLOAK_RELEASE",
            "value": "6.4"
        },
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "jdv-app"
        },
        {
            "description": "Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "APPLICATION_HOSTNAME",
            "value": ""
        },
        {
            "description": "Git source URI for application",
            "name": "GIT_URI"
        },
        {
            "description": "Git branch/tag reference",
            "name": "GIT_REF",
            "value": "master"
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "GIT_CONTEXT_DIR",
            "value": ""
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "name": "DB_JNDI",
            "value": ""
        },
        {
            "description": "Database name",
            "name": "DB_DATABASE",
            "value": "root"
        },
        {
            "description": "Queue names",
            "name": "HORNETQ_QUEUES",
            "value": ""
        },
        {
            "description": "Topic names",
            "name": "HORNETQ_TOPICS",
            "value": ""
        },
        {
            "description": "The name of the secret containing the keystore file",
            "name": "KEYCLOAK_HTTPS_SECRET",
            "value": "jdv-app-secret"
        },
        {
            "description": "The name of the keystore file within the secret",
            "name": "KEYCLOAK_HTTPS_KEYSTORE",
            "value": "keystore.jks"
        },
        {
            "description": "The name associated with the server certificate",
            "name": "KEYCLOAK_HTTPS_NAME",
            "value": ""
        },
        {
            "description": "The password for the keystore and certificate",
            "name": "KEYCLOAK_HTTPS_PASSWORD",
            "value": ""
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "name": "DB_MIN_POOL_SIZE"
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "name": "DB_MAX_POOL_SIZE"
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "name": "DB_TX_ISOLATION"
        },
        {
            "description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.",
            "name": "POSTGRESQL_MAX_CONNECTIONS"
        },
        {
            "description": "Configures how much memory is dedicated to PostgreSQL for caching data.",
            "name": "POSTGRESQL_SHARED_BUFFERS"
        },
        {
            "description": "HornetQ cluster admin password",
            "name": "HORNETQ_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression"
        },
        {
            "description": "Database user name",
            "name": "DB_USERNAME",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression"
        },
        {
            "description": "Database user password",
            "name": "DB_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression"
        },
        {
            "description": "Github trigger secret",
            "name": "GITHUB_TRIGGER_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression"
        },
        {
            "description": "Generic build trigger secret",
            "name": "GENERIC_TRIGGER_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression"
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's http port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "secure-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's https port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8888,
                        "targetPort": 8888
                    }
                ],
                "portalIP": "None",
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-ping",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Ping service for clustered applications."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "host": "${APPLICATION_HOSTNAME}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                             "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "demo",
                                "name": "jboss-dv-openshift:latest"
                            }
                        }
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "serviceAccount": "jdv-service-account",
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "DB_JNDI",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "DB_USERNAME",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "DB_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "DB_MIN_POOL_SIZE",
                                        "value": "${DB_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_MAX_POOL_SIZE",
                                        "value": "${DB_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_TX_ISOLATION",
                                        "value": "${DB_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-ping"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "KEYCLOAK_HTTPS_KEYSTORE_DIR",
                                        "value": "/etc/jdv-secret-volume"
                                    },
                                    {
                                        "name": "KEYCLOAK_HTTPS_KEYSTORE",
                                        "value": "${KEYCLOAK_HTTPS_KEYSTORE}"
                                    },
                                    {
                                        "name": "KEYCLOAK_HTTPS_NAME",
                                        "value": "${KEYCLOAK_HTTPS_NAME}"
                                    },
                                    {
                                        "name": "KEYCLOAK_HTTPS_PASSWORD",
                                        "value": "${KEYCLOAK_HTTPS_PASSWORD}"
                                    },
                                    {
                                        "name": "HORNETQ_CLUSTER_PASSWORD",
                                        "value": "${HORNETQ_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "HORNETQ_QUEUES",
                                        "value": "${HORNETQ_QUEUES}"
                                    },
                                    {
                                        "name": "HORNETQ_TOPICS",
                                        "value": "${HORNETQ_TOPICS}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ]
}
